{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\hyass\\\\source\\\\repos\\\\Aug15_Angular_Project\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../display-post/display-post.component\";\n\nfunction CounterComponent_h2_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Data Received (\", ctx_r0.loadedPosts.length, \" posts)\");\n  }\n}\n\nfunction CounterComponent_app_display_post_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-display-post\", 4);\n  }\n\n  if (rf & 2) {\n    const currLoadedPost_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"userId\", currLoadedPost_r2.userId)(\"id\", currLoadedPost_r2.id)(\"title\", currLoadedPost_r2.title)(\"body\", currLoadedPost_r2.body);\n  }\n}\n\nexport class CounterComponent {\n  constructor(thisPostService) {\n    this.thisPostService = thisPostService;\n    this.currentCount = 0;\n    this.loadedPosts = [];\n    this.isNewPostsAvailableEventSubscribed = false;\n  }\n\n  incrementCounter() {\n    this.currentCount++;\n  }\n\n  testA() {\n    return _asyncToGenerator(function* () {\n      console.log(\"Test A was called\");\n      const promise = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          // Calling resolve is how a promise returns data back from whatever it did\n          resolve('Promise returns after 1.5 second!');\n        }, 1500);\n      }); // Using the keyword await makes TestA sit and wait until promise is done\n      // To use await we must decorate the method with the async keyword\n\n      yield promise.then(function (value) {\n        console.log(value); // Promise returns after 1.5 second!\n      });\n      console.log(\"This line should log immediately after Test A was called\");\n    })();\n  }\n\n  testB() {\n    // The order is important here.  If we subscribe FIRST, we can guarantee we will receive\n    // all data provided by the event.  If we subscribe SECOND, we may not.\n    if (!this.isNewPostsAvailableEventSubscribed) {\n      this.thisPostService.newPostsAvailableEvent.subscribe(gotData => {\n        for (let currElementNo = 0; currElementNo < gotData.length; currElementNo++) this.loadedPosts.push(gotData[currElementNo]);\n\n        console.log(\"Data arrived!  We got \" + gotData.length.toString() + \" records.\");\n      });\n      this.isNewPostsAvailableEventSubscribed = true;\n    }\n\n    this.thisPostService.GetInfoFromServer();\n  }\n\n}\n\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n};\n\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[\"aria-live\", \"polite\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"], [3, \"userId\", \"id\", \"title\", \"body\", 4, \"ngFor\", \"ngForOf\"], [3, \"userId\", \"id\", \"title\", \"body\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This is a simple example of an Angular component.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 0);\n      i0.ɵɵtext(5, \"Current count: \");\n      i0.ɵɵelementStart(6, \"strong\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n        return ctx.incrementCounter();\n      });\n      i0.ɵɵtext(9, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_11_listener() {\n        return ctx.testA();\n      });\n      i0.ɵɵtext(12, \"Run test code A\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_13_listener() {\n        return ctx.testB();\n      });\n      i0.ɵɵtext(14, \"Get Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵtemplate(17, CounterComponent_h2_17_Template, 2, 1, \"h2\", 2);\n      i0.ɵɵtemplate(18, CounterComponent_app_display_post_18_Template, 1, 4, \"app-display-post\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.currentCount);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length != 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.loadedPosts);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, i3.DisplayPostComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/hyass/source/repos/Aug15_Angular_Project/ClientApp/src/app/counter/counter.component.ts"],"names":["i0","i1","i2","i3","CounterComponent_h2_17_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate1","loadedPosts","length","CounterComponent_app_display_post_18_Template","ɵɵelement","currLoadedPost_r2","$implicit","ɵɵproperty","userId","id","title","body","CounterComponent","constructor","thisPostService","currentCount","isNewPostsAvailableEventSubscribed","incrementCounter","testA","console","log","promise","Promise","resolve","reject","setTimeout","then","value","testB","newPostsAvailableEvent","subscribe","gotData","currElementNo","push","toString","GetInfoFromServer","ɵfac","CounterComponent_Factory","t","ɵɵdirectiveInject","PostService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","CounterComponent_Template","ɵɵlistener","CounterComponent_Template_button_click_8_listener","CounterComponent_Template_button_click_11_listener","CounterComponent_Template_button_click_13_listener","ɵɵtemplate","ɵɵtextInterpolate","directives","NgIf","NgForOf","DisplayPostComponent","encapsulation"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wCAApB;;AACA,SAASC,+BAAT,CAAyCC,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAC5DL,IAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,IAArB;AACAP,IAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV;AACAR,IAAAA,EAAE,CAACS,YAAH;AACH;;AAAC,MAAIJ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMK,MAAM,GAAGV,EAAE,CAACW,aAAH,EAAf;AACAX,IAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,IAAAA,EAAE,CAACa,kBAAH,CAAsB,iBAAtB,EAAyCH,MAAM,CAACI,WAAP,CAAmBC,MAA5D,EAAoE,SAApE;AACH;AAAE;;AACH,SAASC,6CAAT,CAAuDX,EAAvD,EAA2DC,GAA3D,EAAgE;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAC1EL,IAAAA,EAAE,CAACiB,SAAH,CAAa,CAAb,EAAgB,kBAAhB,EAAoC,CAApC;AACH;;AAAC,MAAIZ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMa,iBAAiB,GAAGZ,GAAG,CAACa,SAA9B;AACAnB,IAAAA,EAAE,CAACoB,UAAH,CAAc,QAAd,EAAwBF,iBAAiB,CAACG,MAA1C,EAAkD,IAAlD,EAAwDH,iBAAiB,CAACI,EAA1E,EAA8E,OAA9E,EAAuFJ,iBAAiB,CAACK,KAAzG,EAAgH,MAAhH,EAAwHL,iBAAiB,CAACM,IAA1I;AACH;AAAE;;AACH,OAAO,MAAMC,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AACzB,SAAKA,eAAL,GAAuBA,eAAvB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKd,WAAL,GAAmB,EAAnB;AACA,SAAKe,kCAAL,GAA0C,KAA1C;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,SAAKF,YAAL;AACH;;AACKG,EAAAA,KAAK,GAAG;AAAA;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,YAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnDC,QAAAA,UAAU,CAAC,YAAY;AACnB;AACAF,UAAAA,OAAO,CAAC,mCAAD,CAAP;AACH,SAHS,EAGP,IAHO,CAAV;AAIH,OALe,CAAhB,CAFU,CAQV;AACA;;AACA,YAAMF,OAAO,CAACK,IAAR,CAAa,UAAUC,KAAV,EAAiB;AAChCR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ,EADgC,CAEhC;AACH,OAHK,CAAN;AAIAR,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AAdU;AAeb;;AACDQ,EAAAA,KAAK,GAAG;AACJ;AACA;AACA,QAAI,CAAC,KAAKZ,kCAAV,EAA8C;AAC1C,WAAKF,eAAL,CAAqBe,sBAArB,CAA4CC,SAA5C,CAAuDC,OAAD,IAAa;AAC/D,aAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAGD,OAAO,CAAC7B,MAApD,EAA4D8B,aAAa,EAAzE,EACI,KAAK/B,WAAL,CAAiBgC,IAAjB,CAAsBF,OAAO,CAACC,aAAD,CAA7B;;AACJb,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BW,OAAO,CAAC7B,MAAR,CAAegC,QAAf,EAA3B,GAAuD,WAAnE;AACH,OAJD;AAKA,WAAKlB,kCAAL,GAA0C,IAA1C;AACH;;AACD,SAAKF,eAAL,CAAqBqB,iBAArB;AACH;;AAtCyB;;AAwC9BvB,gBAAgB,CAACwB,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAI1B,gBAAV,EAA4BzB,EAAE,CAACoD,iBAAH,CAAqBnD,EAAE,CAACoD,WAAxB,CAA5B,CAAP;AAA2E,CAA1I;;AACA5B,gBAAgB,CAAC6B,IAAjB,GAAwB,aAActD,EAAE,CAACuD,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAE/B,gBAAR;AAA0BgC,EAAAA,SAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAArC;AAAkEC,EAAAA,KAAK,EAAE,EAAzE;AAA6EC,EAAAA,IAAI,EAAE,CAAnF;AAAsFC,EAAAA,MAAM,EAAE,CAAC,CAAC,WAAD,EAAc,QAAd,CAAD,EAA0B,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,CAA1B,EAA6B,OAA7B,CAA1B,EAAiE,CAAC,CAAD,EAAI,MAAJ,CAAjE,EAA8E,CAAC,CAAD,EAAI,QAAJ,EAAc,IAAd,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,CAArC,EAAwC,OAAxC,EAAiD,SAAjD,CAA9E,EAA2I,CAAC,CAAD,EAAI,QAAJ,EAAc,IAAd,EAAoB,OAApB,EAA6B,MAA7B,CAA3I,CAA9F;AAAgRC,EAAAA,QAAQ,EAAE,SAASC,yBAAT,CAAmCzD,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACvYL,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,IAArB;AACAP,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV,EAAa,SAAb;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,GAArB;AACAP,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV,EAAa,mDAAb;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,GAArB,EAA0B,CAA1B;AACAP,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV,EAAa,iBAAb;AACAR,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,QAArB;AACAP,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,QAArB,EAA+B,CAA/B;AACAP,MAAAA,EAAE,CAAC+D,UAAH,CAAc,OAAd,EAAuB,SAASC,iDAAT,GAA6D;AAAE,eAAO1D,GAAG,CAACwB,gBAAJ,EAAP;AAAgC,OAAtH;AACA9B,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV,EAAa,WAAb;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACiB,SAAH,CAAa,EAAb,EAAiB,IAAjB;AACAjB,MAAAA,EAAE,CAACO,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAP,MAAAA,EAAE,CAAC+D,UAAH,CAAc,OAAd,EAAuB,SAASE,kDAAT,GAA8D;AAAE,eAAO3D,GAAG,CAACyB,KAAJ,EAAP;AAAqB,OAA5G;AACA/B,MAAAA,EAAE,CAACQ,MAAH,CAAU,EAAV,EAAc,iBAAd;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACO,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAP,MAAAA,EAAE,CAAC+D,UAAH,CAAc,OAAd,EAAuB,SAASG,kDAAT,GAA8D;AAAE,eAAO5D,GAAG,CAACmC,KAAJ,EAAP;AAAqB,OAA5G;AACAzC,MAAAA,EAAE,CAACQ,MAAH,CAAU,EAAV,EAAc,WAAd;AACAR,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACiB,SAAH,CAAa,EAAb,EAAiB,IAAjB,EAAuB,EAAvB,EAA2B,IAA3B;AACAjB,MAAAA,EAAE,CAACmE,UAAH,CAAc,EAAd,EAAkB/D,+BAAlB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,IAAzD,EAA+D,CAA/D;AACAJ,MAAAA,EAAE,CAACmE,UAAH,CAAc,EAAd,EAAkBnD,6CAAlB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,kBAAvE,EAA2F,CAA3F;AACH;;AAAC,QAAIX,EAAE,GAAG,CAAT,EAAY;AACVL,MAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,MAAAA,EAAE,CAACoE,iBAAH,CAAqB9D,GAAG,CAACsB,YAAzB;AACA5B,MAAAA,EAAE,CAACY,SAAH,CAAa,EAAb;AACAZ,MAAAA,EAAE,CAACoB,UAAH,CAAc,MAAd,EAAsBd,GAAG,CAACQ,WAAJ,CAAgBC,MAAhB,IAA0B,CAAhD;AACAf,MAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,MAAAA,EAAE,CAACoB,UAAH,CAAc,SAAd,EAAyBd,GAAG,CAACQ,WAA7B;AACH;AAAE,GAnCoD;AAmClDuD,EAAAA,UAAU,EAAE,CAACnE,EAAE,CAACoE,IAAJ,EAAUpE,EAAE,CAACqE,OAAb,EAAsBpE,EAAE,CAACqE,oBAAzB,CAnCsC;AAmCUC,EAAAA,aAAa,EAAE;AAnCzB,CAArB,CAAtC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../post.service\";\r\nimport * as i2 from \"@angular/common\";\r\nimport * as i3 from \"../display-post/display-post.component\";\r\nfunction CounterComponent_h2_17_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"h2\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\"Data Received (\", ctx_r0.loadedPosts.length, \" posts)\");\r\n} }\r\nfunction CounterComponent_app_display_post_18_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"app-display-post\", 4);\r\n} if (rf & 2) {\r\n    const currLoadedPost_r2 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"userId\", currLoadedPost_r2.userId)(\"id\", currLoadedPost_r2.id)(\"title\", currLoadedPost_r2.title)(\"body\", currLoadedPost_r2.body);\r\n} }\r\nexport class CounterComponent {\r\n    constructor(thisPostService) {\r\n        this.thisPostService = thisPostService;\r\n        this.currentCount = 0;\r\n        this.loadedPosts = [];\r\n        this.isNewPostsAvailableEventSubscribed = false;\r\n    }\r\n    incrementCounter() {\r\n        this.currentCount++;\r\n    }\r\n    async testA() {\r\n        console.log(\"Test A was called\");\r\n        const promise = new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                // Calling resolve is how a promise returns data back from whatever it did\r\n                resolve('Promise returns after 1.5 second!');\r\n            }, 1500);\r\n        });\r\n        // Using the keyword await makes TestA sit and wait until promise is done\r\n        // To use await we must decorate the method with the async keyword\r\n        await promise.then(function (value) {\r\n            console.log(value);\r\n            // Promise returns after 1.5 second!\r\n        });\r\n        console.log(\"This line should log immediately after Test A was called\");\r\n    }\r\n    testB() {\r\n        // The order is important here.  If we subscribe FIRST, we can guarantee we will receive\r\n        // all data provided by the event.  If we subscribe SECOND, we may not.\r\n        if (!this.isNewPostsAvailableEventSubscribed) {\r\n            this.thisPostService.newPostsAvailableEvent.subscribe((gotData) => {\r\n                for (let currElementNo = 0; currElementNo < gotData.length; currElementNo++)\r\n                    this.loadedPosts.push(gotData[currElementNo]);\r\n                console.log(\"Data arrived!  We got \" + gotData.length.toString() + \" records.\");\r\n            });\r\n            this.isNewPostsAvailableEventSubscribed = true;\r\n        }\r\n        this.thisPostService.GetInfoFromServer();\r\n    }\r\n}\r\nCounterComponent.ɵfac = function CounterComponent_Factory(t) { return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.PostService)); };\r\nCounterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CounterComponent, selectors: [[\"app-counter-component\"]], decls: 19, vars: 3, consts: [[\"aria-live\", \"polite\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"], [3, \"userId\", \"id\", \"title\", \"body\", 4, \"ngFor\", \"ngForOf\"], [3, \"userId\", \"id\", \"title\", \"body\"]], template: function CounterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\");\r\n        i0.ɵɵtext(1, \"Counter\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"p\");\r\n        i0.ɵɵtext(3, \"This is a simple example of an Angular component.\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(4, \"p\", 0);\r\n        i0.ɵɵtext(5, \"Current count: \");\r\n        i0.ɵɵelementStart(6, \"strong\");\r\n        i0.ɵɵtext(7);\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(8, \"button\", 1);\r\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() { return ctx.incrementCounter(); });\r\n        i0.ɵɵtext(9, \"Increment\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(10, \"br\");\r\n        i0.ɵɵelementStart(11, \"button\", 1);\r\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_11_listener() { return ctx.testA(); });\r\n        i0.ɵɵtext(12, \"Run test code A\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(13, \"button\", 1);\r\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_13_listener() { return ctx.testB(); });\r\n        i0.ɵɵtext(14, \"Get Posts\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\r\n        i0.ɵɵtemplate(17, CounterComponent_h2_17_Template, 2, 1, \"h2\", 2);\r\n        i0.ɵɵtemplate(18, CounterComponent_app_display_post_18_Template, 1, 4, \"app-display-post\", 3);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(7);\r\n        i0.ɵɵtextInterpolate(ctx.currentCount);\r\n        i0.ɵɵadvance(10);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length != 0);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.loadedPosts);\r\n    } }, directives: [i2.NgIf, i2.NgForOf, i3.DisplayPostComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}